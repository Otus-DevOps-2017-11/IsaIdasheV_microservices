stages:
  - build
  - review
  - test
  - stage
  - production
variables:
  DATABASE_URL: 'mongodb://mongo/user_posts'

# build_job:
#   stage: build
#   script:
#     - echo 'Building'
before_script:
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null



#  - apk --update add ruby ruby-io-console ruby-irb ruby-json ruby-rake ruby-rdoc ruby-dev make build-base gcc abuild binutils
#  - gem install bundler
#  - cd reddit
#  - bundle install

#test_unit_job:
#   stage: test
#   services:
#     - mongo:latest
#   script:
#     - gem install test-unit
#     - ruby simpletest.rb
#
# test_integration_job:
#   stage: test
#   script:
#     - echo 'Testing 2'

#deploy_dev_job:
#  stage: review
#  script:
#    - echo 'Deploy'
#  environment:
#    name: dev
#    url: http://dev.example.ru

# cache:
#   key: "$CI_COMMIT_REF_NAME"
#   paths:
#     - terraform

Deploy Host Server:
  image:
    name: hashicorp/terraform:light
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  stage: build
  script:
    - cd terraform
    - echo $GOOGLE_CREDENTIALS > credentials.json
    - terraform init
    - terraform apply -auto-approve -var "instance_name=$CI_COMMIT_REF_NAME" -var "public_key_path=$SH_KEY" -var "gitlab_public_key_path=$GITLAB_SH_KEY"
  environment:
    name: branch/$CI_COMMIT_REF_NAME
    url: http://$CI_ENVIRONMENT_SLUG.example.ru
    on_stop: stop_review
  only:
    - branches
  except:
    - master

Ansible Deploy Docker:
  image:
    name: williamyeh/ansible:ubuntu14.04
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  stage: build
  script:
    - pip install apache-libcloud
    - echo $GOOGLE_CREDENTIALS > ~/.PRIV.json
    - export ANSIBLE_CONFIG=./ansible/ansible_in_docker/ansible.cfg
    - export GCE_INI_PATH=./ansible/ansible_in_docker/gce.ini
    - export GCE_PROJECT=testing-gitlab-198014
    - export GCE_EMAIL=54306751049-compute@developer.gserviceaccount.com
    - export GCE_CREDENTIALS_FILE_PATH=~/.PRIV.json
    - pip show apache-libcloud
    - ./ansible/ansible_in_docker/inventory/gce.py --list --pretty
    - cd ansible/ansible_in_docker/
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - echo $SSH_PRIVATE_KEY | tr -d '\r' > ~/.ssh/gitlab && chmod 700 -R ~/.ssh/
    - touch ~/.ssh/known_hosts && chmod 700 -R ~/.ssh/
    - ls -alF
    - echo $ANSIBLE_HOST_KEY_CHECKING
    - ssh -vv -i ~/.ssh/gitlab gitlabci@35.195.99.217
    - ansible -vvv -u gitlabci --private-key=~/.ssh/gitlab -i inventory tag_gitlab-ci -m setup
  environment:
   name: branch/$CI_COMMIT_REF_NAME
  only:
    - branches
  except:
    - master

stop_review:
  image:
    name: hashicorp/terraform:light
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  stage: build
  when: manual
  script:
    - cd terraform
    - terraform destroy -force
  environment:
    name: branch/$CI_COMMIT_REF_NAME
    action: stop

staging:
  stage: stage
  when: manual
  only:
    - /^\d+\.\d+.\d+
  script:
    - echo 'Deploy'
  environment:
    name: stage
    url: http://dev.example.ru

production:
  stage: production
  when: manual
  only:
    - /^\d+\.\d+.\d+
  script:
    - echo 'Deploy'
  environment:
    name: production
    url: http://dev.example.ru
